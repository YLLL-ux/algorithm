package day2;


/**
 * @Description 位1的个数。
 * 编写一个函数，输入是一个无符号整数（以二进制串的形式），返回其二进制表达式中数字位数为 '1' 的个数（也被称为汉明重量）。
 * 示例 1：
 * <p>
 * 输入：00000000000000000000000000001011
 * 输出：3
 * 解释：输入的二进制串 00000000000000000000000000001011中，共有三位为 '1'。
 * <p>
 * 示例 2：
 * <p>
 * 输入：00000000000000000000000010000000
 * 输出：1
 * 解释：输入的二进制串 00000000000000000000000010000000中，共有一位为 '1'。
 * 示例 3：
 * <p>
 * 输入：11111111111111111111111111111101
 * 输出：31
 * 解释：输入的二进制串 11111111111111111111111111111101 中，共有 31 位为 '1'。
 * @Author Phil
 * @CreateTime 2022/5/16
 **/

public class Day2_1 {
    public static void main(String[] args) {
        System.out.println(hammingWeight(00000000000000000000000000001011));
    }

    // 输入必须是长度为 32 的 二进制串
    public static int hammingWeight(int n) {
        int sum = 0;
        for (int i = 0; i < Integer.SIZE; i++) {
            // 按位进行“与运算”，同1则1
            if ((n & 1 << i) != 0) {
                sum++;
            }
        }
        return sum;
    }
}
